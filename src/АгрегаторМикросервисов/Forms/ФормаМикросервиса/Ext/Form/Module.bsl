
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("УИДМикросервиса") Тогда 
		УИДМикросервиса = Параметры.УИДМикросервиса;	
	КонецЕсли; 
	
	ОбновитьНаСервере(); 
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры  


&НаСервере
Процедура ОбновитьНаСервере()   
	
	ОбрОбъект = РеквизитФормыВЗначение("Объект"); 
	ОбрОбъект.Инициализация();    
	ОбрОбъект.ЗаполнитьМикросервис(УИДМикросервиса);
	ЗначениеВРеквизитФормы(ОбрОбъект,"Объект");  
	
	//переносим в форму значения Микросервиса
	ЗаполнитьЗначенияСвойств(ЭтаФорма,ОбрОбъект,"Наименование,Гиперссылка,ИспользуютсяТокеныДоступа,КраткоеОписание,Лайков,Наименование,ОписаниеHTML,Цена,ИмяПродукта,Автор,Метки");
	Для Каждого Стр Из ОбрОбъект.ВерсииМикросервиса Цикл
		НовСтр = ВерсииМикросервиса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла;   
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры     

&НаСервере
Процедура УстановитьВидимостьДоступность()   
	
	Элементы.ВерсииМикросервисаУИДВерсии.Видимость = Объект.РежимОтладки;
	
	Если ЗначениеЗаполнено(ИмяПродукта) Тогда 
		МассивРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя",ИмяПродукта));
		Если МассивРасширений.Количество() = 0 Тогда  
			ТекущаяВерсияРасширения = "0";
		Иначе
			ТекущаяВерсияРасширения = МассивРасширений[0].Версия;
		КонецЕсли;   
	КонецЕсли;
	
	ОтметитьДоступныеДляТекущейКонфигурации();            
	
	Элементы.ФормаУстановить.Доступность = Ложь;
	Элементы.ФормаСкачать.Доступность = Ложь;
	Для Каждого Стр Из ВерсииМикросервиса Цикл
		Если Стр.ДоступноОбновление Тогда 
			Элементы.ФормаУстановить.Доступность = Истина;
		КонецЕсли;  
		Элементы.ФормаСкачать.Доступность = Истина;
	КонецЦикла;
	
	Элементы.ОписаниеHTML.Видимость = ЗначениеЗаполнено(ОписаниеHTML); 
	ЭтаФорма.Заголовок = Наименование;
	Элементы.Токен.Видимость = ИспользуютсяТокеныДоступа;

КонецПроцедуры 

&НаСервере
Процедура ОтметитьДоступныеДляТекущейКонфигурации() 
	
	ОбрОбъект = РеквизитФормыВЗначение("Объект");
	Для Каждого Стр Из ВерсииМикросервиса Цикл
		Стр.Скачать = "Скачать";
		
		Если (СравнитьВерсии(Объект.ТекущаяВерсия1С,Стр.ВерсияКонфигурацииОт) >= 0 ИЛИ Стр.ВерсияКонфигурацииОт="")
			И (ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Стр.ВерсияКонфигурацииДо,Объект.ТекущаяВерсия1С) >= 0 ИЛИ Стр.ВерсияКонфигурацииДо="") Тогда 
			Стр.Установить = "Установить";
		КонецЕсли; 
		
		Если ОбрОбъект.ТолькоЧисла(Стр.ВерсияМикросервиса)=ТекущаяВерсияРасширения И ЗначениеЗаполнено(ТекущаяВерсияРасширения) Тогда 
			Стр.Установлена = Истина;
		КонецЕсли;
							
	КонецЦикла; 
	
	Для Каждого Стр Из ВерсииМикросервиса Цикл
		Если Стр.Установить = "Установить" И СравнитьВерсии(Стр.ВерсияМикросервиса,ТекущаяВерсияРасширения)>0 И ЗначениеЗаполнено(ИмяПродукта) Тогда 
			Стр.ДоступноОбновление = Истина;
			Прервать; 
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры    

&НаСервере
Функция СравнитьВерсии(СтрокаВерсии1, СтрокаВерсии2)
	
	ОбрОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбрОбъект.СравнитьВерсии(СтрокаВерсии1, СтрокаВерсии2)
	
КонецФункции

&НаКлиенте
Процедура ПерейтиПоСсылке(Команда)     
	Если ЗначениеЗаполнено(Гиперссылка) Тогда 
		Если НРег(Объект.Источник) = "infostart" Тогда 
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(Гиперссылка+"?ref=1836");
		Иначе 
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(Гиперссылка);  
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВерсииМикросервисаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)     
	
	ТекДанные = Элементы.ВерсииМикросервиса.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда 
		Возврат;
	КонецЕсли;
		
	Если Поле.Имя = "ВерсииМикросервисаСкачать" И ТекДанные.Скачать = "Скачать" Тогда
		СкачатьВерсиюПродукта(ТекДанные.УИДВерсии);
	ИначеЕсли Поле.Имя = "ВерсииМикросервисаУстановить" И ТекДанные.Установить = "Установить" Тогда
		УстановитьВерсиюПродукта(ТекДанные.УИДВерсии, ТекДанные.ВерсияМикросервиса); 		
	КонецЕсли;    
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьВерсиюПродукта(УИДВерсии)  
	
	Если ИспользуютсяТокеныДоступа И НЕ ЗначениеЗаполнено(Токен) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнен Токен",,"Токен","Токен");
		Возврат;
	КонецЕсли;
	
	АдресХранилища = СкачатьВерсиюПродуктаСервер(УИДВерсии);
	
	Если АдресХранилища = Неопределено Тогда	
		 Возврат;	
	КонецЕсли;  
	
	МассивФайлов = ПолучитьИзВременногоХранилища(АдресХранилища);  
	Для Каждого Эл Из МассивФайлов Цикл
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.ПолноеИмяФайла = Эл.ИмяФайла;
		ДиалогВыбораФайла.Расширение = ПолучитьРасширениеФайла(Эл.ИмяФайла);  
		АдресДД = ПоместитьВоВременноеХранилище(Эл.ДвоичныеДанные);
		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ПриЗакрытииВыбораФайла", ЭтотОбъект, АдресДД);
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	КонецЦикла;
	
КонецПроцедуры  

&НаКлиенте
Процедура Подключаемый_ПриЗакрытииВыбораФайла(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если НЕ ВыбранныеФайлы = Неопределено Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДопПараметры);
	    Попытка
			ДвоичныеДанные.Записать(ВыбранныеФайлы[0]);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;  	
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервере
Функция СкачатьВерсиюПродуктаСервер(УИДВерсии)
	
	ОбрОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбрОбъект.СкачатьВерсиюПродуктаСервер(УИДМикросервиса,УИДВерсии,Токен);
	
КонецФункции   

&НаКлиенте
Процедура УстановитьВерсиюПродукта(УИДВерсии, ВерсияМикросервиса)  
	
	Если ИспользуютсяТокеныДоступа И НЕ ЗначениеЗаполнено(Токен) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнен Токен",,"Токен","Токен");
		Возврат;
	КонецЕсли;

	АдресХранилища = СкачатьВерсиюПродуктаСервер(УИДВерсии);
	
	Если АдресХранилища = Неопределено Тогда	
		 Возврат;	
	КонецЕсли;  
	
	МассивФайлов = ПолучитьИзВременногоХранилища(АдресХранилища);  
	Для Каждого Эл Из МассивФайлов Цикл
		Расширение = ПолучитьРасширениеФайла(Эл.ИмяФайла);  
		АдресДД = ПоместитьВоВременноеХранилище(Эл.ДвоичныеДанные);
		УстановитьВерсиюПродуктаНаСервере(АдресДД, Эл.ИмяФайла, ВерсияМикросервиса);	
		ПоказатьОповещениеПользователя("Микросервис обновлен. Для применения новой версии необходимо перезапустить сеанс 1С",,,,СтатусОповещенияПользователя.Важное);
	КонецЦикла; 
	
	УстановитьВидимостьДоступность(); 
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВерсиюПродуктаНаСервере(АдресХранилища, ИмяФайла, ВерсияМикросервиса)  
	
	ОбрОбъект = РеквизитФормыВЗначение("Объект");
	ОбрОбъект.УстановитьВерсиюПродукта(АдресХранилища, ИмяФайла, ВерсияМикросервиса);
	 
КонецПроцедуры  

&НаСервере
Функция ПолучитьРасширениеФайла(ИмяФайла)

	ПозицияПоследнейТочки = 0;
	РасширениеФайла = ИмяФайла;

	Пока Истина Цикл 
		ПозицияПоследнейТочки = Найти(РасширениеФайла, "."); 
		Если ПозицияПоследнейТочки = 0 Тогда   
			Прервать; 
		Иначе   
			РасширениеФайла = Сред(РасширениеФайла, ПозицияПоследнейТочки + 1)
		КонецЕсли;
	КонецЦикла;

	Возврат ?(РасширениеФайла = ИмяФайла, "", РасширениеФайла);

КонецФункции 

&НаКлиенте
Процедура Установить(Команда)
	
	Для Каждого Стр Из ВерсииМикросервиса Цикл
		Если Стр.ДоступноОбновление Тогда 
			УстановитьВерсиюПродукта(Стр.УИДВерсии, Стр.ВерсияМикросервиса);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Скачать(Команда)  
	
	//скачиваем последнюю версию
	Для Каждого Стр Из ВерсииМикросервиса Цикл
		СкачатьВерсиюПродукта(Стр.УИДВерсии); 
		Возврат;
	КонецЦикла;  
	
КонецПроцедуры
